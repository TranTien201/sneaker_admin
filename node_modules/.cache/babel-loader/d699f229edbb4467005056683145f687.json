{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Frontend\\\\React\\\\tua-react-admin\\\\src\\\\components\\\\list_img\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = props => {\n  _s();\n\n  const initDataShow = props.bodyData;\n  const [dataShow, setDataShow] = useState(initDataShow);\n  console.log(dataShow);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: props.id && props.bodyData ? /*#__PURE__*/_jsxDEV(\"span\", {\n      children: dataShow.map((item, index) => {\n        if (item.id === props.id) {\n          console.log(item.id); //   <img src={item.image} />;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"kz9/JNwDkR2QfP+8yXuyzc884KM=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["D:/Workspace/Frontend/React/tua-react-admin/src/components/list_img/List.jsx"],"names":["React","useState","List","props","initDataShow","bodyData","dataShow","setDataShow","console","log","id","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,YAAY,GAAGD,KAAK,CAACE,QAA3B;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACG,YAAD,CAAxC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,sBACE;AAAA,cACGH,KAAK,CAACO,EAAN,IAAYP,KAAK,CAACE,QAAlB,gBACC;AAAA,gBACGC,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,YAAID,IAAI,CAACF,EAAL,KAAYP,KAAK,CAACO,EAAtB,EAA0B;AACtBF,UAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACF,EAAjB,EADsB,CAE1B;AACC;AACF,OALA;AADH;AAAA;AAAA;AAAA;AAAA,YADD,GASG;AAVN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CApBD;;GAAMR,I;;KAAAA,I;AAsBN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nconst List = (props) => {\r\n  const initDataShow = props.bodyData;\r\n\r\n  const [dataShow, setDataShow] = useState(initDataShow);\r\n\r\n  console.log(dataShow);\r\n  return (\r\n    <li>\r\n      {props.id && props.bodyData ? (\r\n        <span>\r\n          {dataShow.map((item, index) => {\r\n            if (item.id === props.id) {\r\n                console.log(item.id);\r\n            //   <img src={item.image} />;\r\n            }\r\n          })}\r\n        </span>\r\n      ) : null}\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}