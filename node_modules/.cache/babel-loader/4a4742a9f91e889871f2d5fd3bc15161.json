{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspace\\\\Frontend\\\\React\\\\tua-react-admin\\\\src\\\\components\\\\drop-file-input\\\\DropFileInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./drop-file-input.css\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport { ImageConfig } from \"../../config/ImageConfig\";\nimport uploadImg from \"../../assets/images/cloud-upload-regular-240.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DropFileInput = props => {\n  _s();\n\n  const wrapperRef = useRef(null);\n  const [fileList, setFileList] = useState([]);\n\n  const onDragEnter = () => wrapperRef.current.classList.add(\"dragover\");\n\n  const onDragLeave = () => wrapperRef.current.classList.remove(\"dragover\");\n\n  const onDrop = () => wrapperRef.current.classList.remove(\"dragover\");\n\n  const onFileDrop = e => {\n    const newFile = e.target.files[0];\n\n    if (newFile) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList); // props.onFileChange(updatedList);\n    }\n  }; // props.handelClick(fileList)\n\n\n  const fileRemove = file => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(file), 1);\n    setFileList(updatedList); // props.onFileChange(updatedList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      className: \"drop-file-input\",\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-input__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop your files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        value: \"\",\n        onChange: onFileDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), fileList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-file-preview__title\",\n        children: \"Ready to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), fileList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-preview__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImageConfig[item.type.split(\"/\")[1]] || ImageConfig[\"default\"],\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-file-preview__item__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.size, \"B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drop-file-preview__item__del\",\n          onClick: () => fileRemove(item),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        marginTop: \"10px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          children: \"Add Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(DropFileInput, \"9iAumBGwGcaH0xbFrBB0J8bZ30w=\");\n\n_c = DropFileInput;\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func\n};\nexport default DropFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropFileInput\");","map":{"version":3,"names":["React","useRef","useState","PropTypes","Grid","Button","ImageConfig","uploadImg","DropFileInput","props","wrapperRef","fileList","setFileList","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","onFileDrop","e","newFile","target","files","updatedList","fileRemove","file","splice","indexOf","length","map","item","index","type","split","name","size","marginTop","propTypes","onFileChange","func"],"sources":["D:/Workspace/Frontend/React/tua-react-admin/src/components/drop-file-input/DropFileInput.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./drop-file-input.css\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ImageConfig } from \"../../config/ImageConfig\";\r\nimport uploadImg from \"../../assets/images/cloud-upload-regular-240.png\";\r\n\r\nconst DropFileInput = (props) => {\r\n  const wrapperRef = useRef(null);\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const onDragEnter = () => wrapperRef.current.classList.add(\"dragover\");\r\n\r\n  const onDragLeave = () => wrapperRef.current.classList.remove(\"dragover\");\r\n\r\n  const onDrop = () => wrapperRef.current.classList.remove(\"dragover\");\r\n\r\n  const onFileDrop = (e) => {\r\n    const newFile = e.target.files[0];\r\n    if (newFile) {\r\n      const updatedList = [...fileList, newFile];\r\n      setFileList(updatedList);\r\n      // props.onFileChange(updatedList);\r\n    }\r\n  };\r\n  // props.handelClick(fileList)\r\n  const fileRemove = (file) => {\r\n    const updatedList = [...fileList];\r\n    updatedList.splice(fileList.indexOf(file), 1);\r\n    setFileList(updatedList);\r\n    // props.onFileChange(updatedList);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={wrapperRef}\r\n        className=\"drop-file-input\"\r\n        onDragEnter={onDragEnter}\r\n        onDragLeave={onDragLeave}\r\n        onDrop={onDrop}\r\n      >\r\n        <div className=\"drop-file-input__label\">\r\n          <img src={uploadImg} alt=\"\" />\r\n          <p>Drag & Drop your files here</p>\r\n        </div>\r\n        <input type=\"file\" value=\"\" onChange={onFileDrop} />\r\n      </div>\r\n      {fileList.length > 0 ? (\r\n        <div className=\"drop-file-preview\">\r\n          <p className=\"drop-file-preview__title\">Ready to upload</p>\r\n          {fileList.map((item, index) => (\r\n            <div key={index} className=\"drop-file-preview__item\">\r\n              <img\r\n                src={\r\n                  ImageConfig[item.type.split(\"/\")[1]] || ImageConfig[\"default\"]\r\n                }\r\n                alt=\"\"\r\n              />\r\n              <div className=\"drop-file-preview__item__info\">\r\n                <p>{item.name}</p>\r\n                <p>{item.size}B</p>\r\n              </div>\r\n              <span\r\n                className=\"drop-file-preview__item__del\"\r\n                onClick={() => fileRemove(item)}\r\n              >\r\n                x\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n      <Grid container spacing={2} sx={{ marginTop: \"10px\" }}>\r\n        <Grid item xs={6}>\r\n          <Button variant=\"outlined\">Add Image</Button>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nDropFileInput.propTypes = {\r\n  onFileChange: PropTypes.func,\r\n};\r\n\r\nexport default DropFileInput;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}