[{"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\index.js":"1","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\reportWebVitals.js":"2","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\layout\\Layout.jsx":"3","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\redux\\reducers\\index.js":"4","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\redux\\actions\\ThemeAction.js":"5","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\Routes.jsx":"6","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\sidebar\\Sidebar.jsx":"7","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\topnav\\TopNav.jsx":"8","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\redux\\reducers\\ThemeReducer.js":"9","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\Customers.jsx":"10","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\Dashboard.jsx":"11","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\dropdown\\Dropdown.jsx":"12","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\thememenu\\ThemeMenu.jsx":"13","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\badge\\Badge.jsx":"14","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\table\\Table.jsx":"15","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\status-card\\StatusCard.jsx":"16","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\Products.jsx":"17","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\assets\\JsonData\\products.js":"18","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\list_img\\List.jsx":"19","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\assets\\JsonData\\image_color.js":"20","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddProduct.jsx":"21","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddImage.jsx":"22","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\drop-file-input\\DropFileInput.jsx":"23","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\config\\ImageConfig.js":"24","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\addImage\\addImageDetail.jsx":"25","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\addImage\\AddImageDetail.jsx":"26","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddSize.jsx":"27","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddBrand.jsx":"28","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\utils\\request.js":"29","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\service\\apiServices.js":"30"},{"size":1021,"mtime":1658370482628,"results":"31","hashOfConfig":"32"},{"size":375,"mtime":1657676796200,"results":"33","hashOfConfig":"32"},{"size":1377,"mtime":1657676796193,"results":"34","hashOfConfig":"32"},{"size":167,"mtime":1657676796200,"results":"35","hashOfConfig":"32"},{"size":390,"mtime":1657676796200,"results":"36","hashOfConfig":"32"},{"size":921,"mtime":1658304806534,"results":"37","hashOfConfig":"32"},{"size":1258,"mtime":1658213481863,"results":"38","hashOfConfig":"32"},{"size":2559,"mtime":1657873449850,"results":"39","hashOfConfig":"32"},{"size":416,"mtime":1657676796200,"results":"40","hashOfConfig":"32"},{"size":1543,"mtime":1658391464948,"results":"41","hashOfConfig":"32"},{"size":7202,"mtime":1657676796199,"results":"42","hashOfConfig":"32"},{"size":1872,"mtime":1657676796193,"results":"43","hashOfConfig":"32"},{"size":5057,"mtime":1657676796197,"results":"44","hashOfConfig":"32"},{"size":229,"mtime":1657676796192,"results":"45","hashOfConfig":"32"},{"size":2001,"mtime":1658716449948,"results":"46","hashOfConfig":"32"},{"size":467,"mtime":1657676796195,"results":"47","hashOfConfig":"32"},{"size":2675,"mtime":1658734572276,"results":"48","hashOfConfig":"32"},{"size":593,"mtime":1657685063565,"results":"49","hashOfConfig":"32"},{"size":679,"mtime":1658733981634,"results":"50","hashOfConfig":"32"},{"size":751,"mtime":1657697617887,"results":"51","hashOfConfig":"32"},{"size":8376,"mtime":1658730216434,"results":"52","hashOfConfig":"32"},{"size":4946,"mtime":1658718206696,"results":"53","hashOfConfig":"32"},{"size":2738,"mtime":1658455785703,"results":"54","hashOfConfig":"32"},{"size":378,"mtime":1657874883057,"results":"55","hashOfConfig":"32"},{"size":3852,"mtime":1658111840134,"results":"56","hashOfConfig":"32"},{"size":6247,"mtime":1658730217748,"results":"57","hashOfConfig":"32"},{"size":8676,"mtime":1658733323580,"results":"58","hashOfConfig":"32"},{"size":3058,"mtime":1658664911979,"results":"59","hashOfConfig":"32"},{"size":430,"mtime":1658544753577,"results":"60","hashOfConfig":"32"},{"size":579,"mtime":1658544475183,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},"1aw1hhk",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"65"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\index.js",["127"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nimport { createStore } from 'redux'\r\n\r\nimport { Provider } from 'react-redux'\r\n\r\nimport rootReducer from './redux/reducers'\r\n\r\nimport './assets/boxicons-2.0.7/css/boxicons.min.css'\r\nimport './assets/css/grid.css'\r\nimport './assets/css/theme.css'\r\nimport './assets/css/index.css'\r\n\r\nimport Layout from './components/layout/Layout'\r\nimport { Axios } from 'axios';\r\n\r\n// Axios.defaults.baseURL ='http://localhost:8080'\r\n\r\nconst store = createStore(\r\n  rootReducer\r\n)\r\n\r\ndocument.title = 'Sneaker Shop'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Layout />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["128","129"],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\reportWebVitals.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\layout\\Layout.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\redux\\reducers\\index.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\redux\\actions\\ThemeAction.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\Routes.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\sidebar\\Sidebar.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\topnav\\TopNav.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\redux\\reducers\\ThemeReducer.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\Customers.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\Dashboard.jsx",["130"],"import React, {useEffect} from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Chart from 'react-apexcharts'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport StatusCard from '../components/status-card/StatusCard'\r\n\r\nimport Table from '../components/table/Table'\r\n\r\nimport Badge from '../components/badge/Badge'\r\n\r\nimport statusCards from '../assets/JsonData/status-card-data.json'\r\n\r\nconst chartOptions = {\r\n    series: [{\r\n        name: 'Online Customers',\r\n        data: [40,70,20,90,36,80,30,91,60]\r\n    }, {\r\n        name: 'Store Customers',\r\n        data: [40, 30, 70, 80, 40, 16, 40, 20, 51, 10]\r\n    }],\r\n    options: {\r\n        color: ['#6ab04c', '#2980b9'],\r\n        chart: {\r\n            background: 'transparent'\r\n        },\r\n        dataLabels: {\r\n            enabled: false\r\n        },\r\n        stroke: {\r\n            curve: 'smooth'\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n        },\r\n        legend: {\r\n            position: 'top'\r\n        },\r\n        grid: {\r\n            show: false\r\n        }\r\n    }\r\n}\r\n\r\nconst topCustomers = {\r\n    head: [\r\n        'user',\r\n        'total orders',\r\n        'total spending'\r\n    ],\r\n    body: [\r\n        {\r\n            \"username\": \"john doe\",\r\n            \"order\": \"490\",\r\n            \"price\": \"$15,870\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"250\",\r\n            \"price\": \"$12,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"120\",\r\n            \"price\": \"$10,840\"\r\n        },\r\n        {\r\n            \"username\": \"frank iva\",\r\n            \"order\": \"110\",\r\n            \"price\": \"$9,251\"\r\n        },\r\n        {\r\n            \"username\": \"anthony baker\",\r\n            \"order\": \"80\",\r\n            \"price\": \"$8,840\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst renderCusomerHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderCusomerBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.username}</td>\r\n        <td>{item.order}</td>\r\n        <td>{item.price}</td>\r\n    </tr>\r\n)\r\n\r\nconst latestOrders = {\r\n    header: [\r\n        \"order id\",\r\n        \"user\",\r\n        \"total price\",\r\n        \"date\",\r\n        \"status\"\r\n    ],\r\n    body: [\r\n        {\r\n            id: \"#OD1711\",\r\n            user: \"john doe\",\r\n            date: \"17 Jun 2021\",\r\n            price: \"$900\",\r\n            status: \"shipping\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"pending\"\r\n        },\r\n        {\r\n            id: \"#OD1712\",\r\n            user: \"frank iva\",\r\n            date: \"1 Jun 2021\",\r\n            price: \"$400\",\r\n            status: \"paid\"\r\n        },\r\n        {\r\n            id: \"#OD1713\",\r\n            user: \"anthony baker\",\r\n            date: \"27 Jun 2021\",\r\n            price: \"$200\",\r\n            status: \"refund\"\r\n        }\r\n    ]\r\n}\r\n\r\nconst orderStatus = {\r\n    \"shipping\": \"primary\",\r\n    \"pending\": \"warning\",\r\n    \"paid\": \"success\",\r\n    \"refund\": \"danger\"\r\n}\r\n\r\nconst renderOrderHead = (item, index) => (\r\n    <th key={index}>{item}</th>\r\n)\r\n\r\nconst renderOrderBody = (item, index) => (\r\n    <tr key={index}>\r\n        <td>{item.id}</td>\r\n        <td>{item.user}</td>\r\n        <td>{item.price}</td>\r\n        <td>{item.date}</td>\r\n        <td>\r\n            <Badge type={orderStatus[item.status]} content={item.status}/>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nconst Dashboard = () => {\r\n\r\n    const themeReducer = useSelector(state => state.ThemeReducer.mode)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"page-header\">Dashboard</h2>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            statusCards.map((item, index) => (\r\n                                <div className=\"col-6\" key={index}>\r\n                                    <StatusCard\r\n                                        icon={item.icon}\r\n                                        count={item.count}\r\n                                        title={item.title}\r\n                                    />\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card full-height\">\r\n                        {/* chart */}\r\n                        <Chart\r\n                            options={themeReducer === 'theme-mode-dark' ? {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'dark'}\r\n                            } : {\r\n                                ...chartOptions.options,\r\n                                theme: { mode: 'light'}\r\n                            }}\r\n                            series={chartOptions.series}\r\n                            type='line'\r\n                            height='100%'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>top customers</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={topCustomers.head}\r\n                                renderHead={(item, index) => renderCusomerHead(item, index)}\r\n                                bodyData={topCustomers.body}\r\n                                renderBody={(item, index) => renderCusomerBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card__header\">\r\n                            <h3>latest orders</h3>\r\n                        </div>\r\n                        <div className=\"card__body\">\r\n                            <Table\r\n                                headData={latestOrders.header}\r\n                                renderHead={(item, index) => renderOrderHead(item, index)}\r\n                                bodyData={latestOrders.body}\r\n                                renderBody={(item, index) => renderOrderBody(item, index)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"card__footer\">\r\n                            <Link to='/'>view all</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\dropdown\\Dropdown.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\thememenu\\ThemeMenu.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\badge\\Badge.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\table\\Table.jsx",["131","132"],"import React, { useState, useEffect, memo } from \"react\";\r\n\r\nimport \"./table.css\";\r\n\r\nconst Table = (props) => {\r\n  const initDataShow =\r\n    props.limit && props.bodyData\r\n      ? props.bodyData.slice(0, Number(props.limit))\r\n      : props.bodyData;\r\n  const [dataShow, setDataShow] = useState([]);\r\n  useEffect(() => {\r\n    setDataShow(initDataShow);\r\n  }, [props.bodyData]);\r\n  let pages = 1;\r\n  let index = 0;\r\n  let range = [];\r\n  console.log(123);\r\n  if (props.limit !== undefined) {\r\n    let page = Math.floor(props.bodyData.length / Number(props.limit));\r\n    pages = props.bodyData.length % Number(props.limit) === 0 ? page : page + 1;\r\n    range = [...Array(pages).keys()];\r\n  }\r\n\r\n  const [currPage, setCurrPage] = useState(0);\r\n\r\n  const selectPage = (page) => {\r\n    const start = Number(props.limit) * page;\r\n    const end = start + Number(props.limit);\r\n\r\n    setDataShow(props.bodyData.slice(start, end));\r\n\r\n    setCurrPage(page);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"table-wrapper\">\r\n        <table>\r\n          {props.headData ? (\r\n            <thead>\r\n              <tr>\r\n                {props.headData.map((item, index) => (\r\n                  <th key={index}>{item}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n          ) : null}\r\n          {props.bodyData ? (\r\n            <tbody>\r\n              {dataShow.map((item, index) => props.renderBody(item, index, props.data))}\r\n            </tbody>\r\n          ) : null}\r\n        </table>\r\n      </div>\r\n      {pages > 1 ? (\r\n        <div className=\"table__pagination\">\r\n          {range.map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className={`table__pagination-item ${\r\n                currPage === index ? \"active\" : \"\"\r\n              }`}\r\n              onClick={() => selectPage(index)}\r\n            >\r\n              {item + 1}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Table);\r\n","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\status-card\\StatusCard.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\Products.jsx",["133","134"],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\assets\\JsonData\\products.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\list_img\\List.jsx",["135","136"],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\assets\\JsonData\\image_color.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddProduct.jsx",["137"],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddImage.jsx",["138"],"import Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport { useState, useEffect, useRef , useCallback } from \"react\";\r\nimport DropFileInput from \"../components/drop-file-input/DropFileInput\";\r\nimport AddImageDetail from \"../components/addImage/AddImageDetail\";\r\nimport { get, post, postFile } from \"../service/apiServices\";\r\nimport Table from \"../components/table/Table\";\r\nimport { url } from \"../utils/request\";\r\nconst AddImage = () => {\r\n  const [product, setProduct] = useState([]);\r\n  const [images_color, setImageColors] = useState([]);\r\n  const [product_id, setProductID] = useState(\"\");\r\n  const [file, setFiles] = useState();\r\n\r\n  const customerTableHead = useRef([\"\", \"Product Name\", \"Image\"]);\r\n  useEffect(() => {\r\n    const fetchProductApi = async () => {\r\n      const result = await get(\"product/data\");\r\n      setProduct(result);\r\n    };\r\n    fetchProductApi();\r\n  }, []);\r\n  useEffect(() => {\r\n    const fetchImageColorApi = async () => {\r\n      const result = await get(\"product/color/data\");\r\n      setImageColors(result);\r\n    };\r\n    fetchImageColorApi();\r\n  }, []);\r\n  const renderBody = useCallback((item, index, product) => {\r\n    const name = product.find((f) => f.id === item.product_id).name\r\n    return (\r\n      <tr key={index}>\r\n        <td>{index + 1}</td>\r\n        <td>{name}</td>\r\n        <td style={{ display: \"flex\" }}>\r\n          <span\r\n            style={{\r\n              width: \"50px\",\r\n              height: \"50px\",\r\n              border: \"1px solid #ccc\",\r\n              marginLeft: \"5px\",\r\n              borderRadius: \"5px\",\r\n            }}\r\n          >\r\n            <img\r\n              src={url + item.image_color}\r\n              alt=\"product_image_color\"\r\n              style={{ width: \"100%\" }}\r\n            />\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }, []);\r\n\r\n  const onImageSubmit = (files) => {\r\n    let formData = new FormData();\r\n    setFiles(files);\r\n    files.map((file) => {\r\n      let image_color = file.name;\r\n      const data = { product_id, image_color };\r\n      console.log(file);\r\n      formData.append(\"file\", file);\r\n      const addFileApi = async () => {\r\n        const result = await postFile(formData);\r\n        console.log(result);\r\n      };\r\n      addFileApi();\r\n      // Fetch API\r\n      console.log(data);\r\n      const addProductImage = async () => {\r\n        const result = await post(\"product/color/save\", data);\r\n        console.log(result);\r\n      };\r\n      addProductImage();\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <div>\r\n        <h2 className=\"page-header\">Add Image</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"card\">\r\n              <div className=\"card__body\">\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={8}>\r\n                      <div className=\"box\">\r\n                        <DropFileInput\r\n                          onImageSubmit={onImageSubmit}\r\n                          name={\"Add Image Product\"}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Autocomplete\r\n                        onChange={(event, newValue) => {\r\n                          setProductID(newValue === null ? null : newValue.id);\r\n                        }}\r\n                        id=\"controllable-states-demo\"\r\n                        getOptionLabel={(product) => `${product.name}`}\r\n                        options={product}\r\n                        sx={{ width: \"100%\", background: \"#fff\" }}\r\n                        isOptionEqualToValue={(option, value) =>\r\n                          option.id === value.AddImageDetail\r\n                        }\r\n                        noOptionsText={\"NO BRAND\"}\r\n                        renderOption={(props, product) => (\r\n                          <Box component=\"li\" {...props} key={product.id}>\r\n                            {product.name}\r\n                          </Box>\r\n                        )}\r\n                        renderInput={(params) => (\r\n                          <TextField {...params} label=\"Products\" />\r\n                        )}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\">\r\n        <div className=\"card__body\">\r\n          <Table\r\n            limit=\"10\"\r\n            headData={customerTableHead.current}\r\n            bodyData={images_color}\r\n            renderBody={renderBody}\r\n            data={product}\r\n          />\r\n        </div>\r\n      </div>\r\n      <AddImageDetail product={product} file={file} />\r\n    </>\r\n  );\r\n};\r\nexport default AddImage;\r\n","D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\drop-file-input\\DropFileInput.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\config\\ImageConfig.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\addImage\\addImageDetail.jsx",["139","140","141"],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\components\\addImage\\AddImageDetail.jsx",["142"],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddSize.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\pages\\AddBrand.jsx",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\utils\\request.js",[],"D:\\Workspace\\Frontend\\React\\tua-react-admin\\src\\service\\apiServices.js",[],{"ruleId":"143","severity":1,"message":"144","line":17,"column":10,"nodeType":"145","messageId":"146","endLine":17,"endColumn":15},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"143","severity":1,"message":"151","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":13,"column":6,"nodeType":"154","endLine":13,"endColumn":22,"suggestions":"155"},{"ruleId":"143","severity":1,"message":"156","line":15,"column":7,"nodeType":"145","messageId":"146","endLine":15,"endColumn":12},{"ruleId":"143","severity":1,"message":"157","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":20},{"ruleId":"143","severity":1,"message":"158","line":7,"column":10,"nodeType":"145","messageId":"146","endLine":7,"endColumn":13},{"ruleId":"143","severity":1,"message":"159","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":7,"column":41,"nodeType":"162","messageId":"163","endLine":7,"endColumn":43},{"ruleId":"143","severity":1,"message":"164","line":13,"column":10,"nodeType":"145","messageId":"146","endLine":13,"endColumn":16},{"ruleId":"160","severity":1,"message":"165","line":62,"column":22,"nodeType":"162","messageId":"166","endLine":62,"endColumn":24},{"ruleId":"160","severity":1,"message":"165","line":36,"column":22,"nodeType":"162","messageId":"166","endLine":36,"endColumn":24},{"ruleId":"143","severity":1,"message":"167","line":37,"column":11,"nodeType":"145","messageId":"146","endLine":37,"endColumn":22},{"ruleId":"168","severity":1,"message":"169","line":78,"column":25,"nodeType":"170","endLine":86,"endColumn":27},{"ruleId":"160","severity":1,"message":"165","line":78,"column":22,"nodeType":"162","messageId":"166","endLine":78,"endColumn":24},"no-unused-vars","'Axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["171"],"no-negated-in-lhs",["172"],"'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initDataShow'. Either include it or remove the dependency array.","ArrayExpression",["173"],"'index' is assigned a value but never used.","'customerList' is defined but never used.","'url' is defined but never used.","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'margin' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","'image_color' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},"Update the dependencies array to be: [initDataShow, props.bodyData]",{"range":"176","text":"177"},[359,375],"[initDataShow, props.bodyData]"]